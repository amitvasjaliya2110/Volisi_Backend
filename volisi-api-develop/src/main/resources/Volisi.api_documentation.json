{
	"info": {
		"_postman_id": "932980f4-1628-4f3f-baab-195207d8364a",
		"name": "Volisi Documentation",
		"description": "The below collection is about the API Documentation of Quiz Game - Volisi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35956540"
	},
	"item": [
		{
			"name": "Player API",
			"item": [],
			"description": "## Player\n\n- **Featrue: Create new player**\n- **EndPoint URL : \" /api/player \"**\n- **HTTP Methods: POST**\n    \n\n#### **Request Formate:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| name | string | Must be unique, length max 30, allow blank spaces, mandatory field. | Name for new Player. |\n| userQuiz | Long | Duplicate key not allowed.Not be Null and Mandatory field. | Userquiz is a userQuizId which player gives. |\n\n#### Sample Request:\n\n``` json\n{\n    \"name\": \"Kevin\",\n    \"userQuiz\" : {\n        \"id\" : 1\n    }\n}\n\n ```\n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| playerId | int | PlayerId is autogenerated. |\n| name | String | Name of the player (for confirmation). |\n| ranking | int | Rank is calculate by finalscore. |\n| finalScore | int | FinalScore is total score of player in quiz. |\n| questionAnswered | boolean | If the player gives the answer, then the questionAnswered is true. If the player does not give the answer, then the questionAnswered is false. |\n| userQuiz | Long | UserQuiz object is a userQuizId wich is given by Player. |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player saved successfully\",\n    \"data\": {\n        \"id\": 3,\n        \"name\": \"Kevin\",\n        \"ranking\": 0,\n        \"finalScore\": 0,\n        \"questionsAnswered\": false,\n        \"userQuiz\": {\n            \"id\": 1,\n            \"name\": \"Art Quiz\",\n            \"quiz\": {\n                \"id\": 1,\n                \"name\": \"Java Quiz\",\n                \"description\": \"This is java quiz\",\n                \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n                \"language\": \"English\",\n                \"status\": \"Active\",\n                \"points\": {\n                    \"id\": 1,\n                    \"name\": \"no points\",\n                    \"description\": \"user doesn't choose any option\"\n                },\n                \"collection\": {\n                    \"id\": 1,\n                    \"name\": \"Java\"\n                },\n                \"type\": {\n                    \"id\": 1,\n                    \"name\": \"General Knowledge Quiz\"\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"user_john\",\n                    \"email\": \"john@example.com\",\n                    \"active\": true\n                },\n                \"deleted\": false\n            },\n            \"players\": 10,\n            \"time\": 50.0,\n            \"code\": 611892,\n            \"performancePercentage\": 100.0\n        }\n    }\n}\n\n ```\n\n## Get Player By Id\n\n- **Featrue: Get a Player**\n- **EndPoint URL : \" /api/player/{id}\"**\n- **HTTP Methods: GET**\n    \n\n#### **Request Formate:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | int | Mandatory field. | To get the data of particular Id |\n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| name | String | Name of the Player |\n| ranking | int | Rank of player |\n| finalscore | int | Total score of player |\n| questionAnswered | boolean | Give true or false value |\n| userQuiz | Long | To get data of the UserQuiz entity |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player found successfully\",\n    \"data\": {\n        \"id\": 3,\n        \"name\": \"Kevin\",\n        \"ranking\": 0,\n        \"finalScore\": 0,\n        \"questionsAnswered\": false,\n        \"userQuiz\": {\n            \"id\": 1,\n            \"name\": \"Art Quiz\",\n            \"quiz\": {\n                \"id\": 1,\n                \"name\": \"Java Quiz\",\n                \"description\": \"This is java quiz\",\n                \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n                \"language\": \"English\",\n                \"status\": \"Active\",\n                \"points\": {\n                    \"id\": 1,\n                    \"name\": \"no points\",\n                    \"description\": \"user doesn't choose any option\"\n                },\n                \"collection\": {\n                    \"id\": 1,\n                    \"name\": \"Java\"\n                },\n                \"type\": {\n                    \"id\": 1,\n                    \"name\": \"General Knowledge Quiz\"\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"user_john\",\n                    \"email\": \"john@example.com\",\n                    \"active\": true\n                },\n                \"deleted\": false\n            },\n            \"players\": 10,\n            \"time\": 50,\n            \"code\": 611892,\n            \"performancePercentage\": 100\n        }\n    }\n}\n\n ```\n\n## Get all Players\n\n- **Featrue: Get all existing Players**\n- **EndPoint URL : \" /api/player\"**\n- **HTTP Methods: GET**\n    \n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| name | String | Name of the player |\n| ranking | int | Rank of player |\n| finalscore | int | Total score of player |\n| questionAnswered | boolean | Give true or false value |\n| userQuiz | Long | To get data of the UserQuiz entity |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player found successfully\",\n    \"data\": [\n        {\n            \"id\": 2,\n            \"name\": \"John\",\n            \"ranking\": 0,\n            \"finalScore\": 0,\n            \"questionsAnswered\": false,\n            \"userQuiz\": {\n                \"id\": 1,\n                \"name\": \"Art Quiz\",\n                \"quiz\": {\n                    \"id\": 1,\n                    \"name\": \"Java Quiz\",\n                    \"description\": \"This is java quiz\",\n                    \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n                    \"language\": \"English\",\n                    \"status\": \"Active\",\n                    \"points\": {\n                        \"id\": 1,\n                        \"name\": \"no points\",\n                        \"description\": \"user doesn't choose any option\"\n                    },\n                    \"collection\": {\n                        \"id\": 1,\n                        \"name\": \"Java\"\n                    },\n                    \"type\": {\n                        \"id\": 1,\n                        \"name\": \"General Knowledge Quiz\"\n                    },\n                    \"user\": {\n                        \"id\": 1,\n                        \"username\": \"user_john\",\n                        \"email\": \"john@example.com\",\n                        \"active\": true\n                    },\n                    \"deleted\": false\n                },\n                \"players\": 10,\n                \"time\": 50,\n                \"code\": 611892,\n                \"performancePercentage\": 100\n            }\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Kevin\",\n            \"ranking\": 0,\n            \"finalScore\": 0,\n            \"questionsAnswered\": false,\n            \"userQuiz\": {\n                \"id\": 1,\n                \"name\": \"Art Quiz\",\n                \"quiz\": {\n                    \"id\": 1,\n                    \"name\": \"Java Quiz\",\n                    \"description\": \"This is java quiz\",\n                    \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n                    \"language\": \"English\",\n                    \"status\": \"Active\",\n                    \"points\": {\n                        \"id\": 1,\n                        \"name\": \"no points\",\n                        \"description\": \"user doesn't choose any option\"\n                    },\n                    \"collection\": {\n                        \"id\": 1,\n                        \"name\": \"Java\"\n                    },\n                    \"type\": {\n                        \"id\": 1,\n                        \"name\": \"General Knowledge Quiz\"\n                    },\n                    \"user\": {\n                        \"id\": 1,\n                        \"username\": \"user_john\",\n                        \"email\": \"john@example.com\",\n                        \"active\": true\n                    },\n                    \"deleted\": false\n                },\n                \"players\": 10,\n                \"time\": 50,\n                \"code\": 611892,\n                \"performancePercentage\": 100\n            }\n        }\n    ]\n}\n\n ```\n\n# Update Player\n\n- **Feature: Update Player**\n- **EndPoint URL : \" /api/player \"**\n- **HTTP Methods: PUT**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | Positive int value. | Id of player for update. |\n| name | string | Mandatory field. | Updated name of player. |\n| userQuiz | Long | Duplicate key not allowed.Not be Null and Mandatory field. | userQuiz is a userQuizId wich is given by player. |\n\n#### Sample Request:\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player updated successfully\",\n    \"data\": {\n        \"id\": 2,\n        \"name\": \"John\",\n        \"ranking\": 0,\n        \"finalScore\": 0,\n        \"questionsAnswered\": false,\n        \"userQuiz\": {\n            \"id\": 1,\n            \"name\": \"Art Quiz\",\n            \"quiz\": {\n                \"id\": 1,\n                \"name\": \"Java Quiz\",\n                \"description\": \"This is java quiz\",\n                \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n                \"language\": \"English\",\n                \"status\": \"Active\",\n                \"points\": {\n                    \"id\": 1,\n                    \"name\": \"no points\",\n                    \"description\": \"user doesn't choose any option\"\n                },\n                \"collection\": {\n                    \"id\": 1,\n                    \"name\": \"Java\"\n                },\n                \"type\": {\n                    \"id\": 1,\n                    \"name\": \"General Knowledge Quiz\"\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"user_john\",\n                    \"email\": \"john@example.com\",\n                    \"active\": true\n                },\n                \"deleted\": false\n            },\n            \"players\": 10,\n            \"time\": 50,\n            \"code\": 611892,\n            \"performancePercentage\": 100\n        }\n    }\n}\n\n ```\n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| playerId | int | Id of updated Player. |\n| name | String | Updated Name of the player (for confirmation). |\n| ranking | int | Rank is calculate by finalscore. |\n| finalScore | int | FinalScore is total score of player in quiz. |\n| questionAnswered | boolean | If the player gives the answer, then the questionAnswered is true. If the player does not give the answer, then the questionAnswered is false. |\n| userQuiz | Long | UserQuiz object is a userQuizId which Player gives. |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player updated successfully\",\n    \"data\": {\n        \"id\": 2,\n        \"name\": \"John\",\n        \"ranking\": 0,\n        \"finalScore\": 0,\n        \"questionsAnswered\": false,\n        \"userQuiz\": {\n            \"id\": 1,\n            \"name\": \"Art Quiz\",\n            \"quiz\": {\n                \"id\": 1,\n                \"name\": \"Java Quiz\",\n                \"description\": \"This is java quiz\",\n                \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n                \"language\": \"English\",\n                \"status\": \"Active\",\n                \"points\": {\n                    \"id\": 1,\n                    \"name\": \"no points\",\n                    \"description\": \"user doesn't choose any option\"\n                },\n                \"collection\": {\n                    \"id\": 1,\n                    \"name\": \"Java\"\n                },\n                \"type\": {\n                    \"id\": 1,\n                    \"name\": \"General Knowledge Quiz\"\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"user_john\",\n                    \"email\": \"john@example.com\",\n                    \"active\": true\n                },\n                \"deleted\": false\n            },\n            \"players\": 10,\n            \"time\": 50,\n            \"code\": 611892,\n            \"performancePercentage\": 100\n        }\n    }\n}\n\n ```\n\n## Delete Player byId\n\n- **Feature: Delete Player**\n    \n- **EndPoint URL : \" /api/player/id \"**\n    \n- **HTTP Methods: DELETE**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | int | Mandatory field. | To get the data of particular Id |\n\n#### Sample Response:-\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player deleted successfully\"\n}\n\n ```"
		},
		{
			"name": "Collection API",
			"item": [],
			"description": "## Post Collection\n\n- **Feature: Create new collection**\n    \n- **EndPoint URL : \" /api/collection \"**\n    \n- **HTTP Methods: POST**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| name | string | Mandatory field. | Name for new Collection. |\n| user | Long | Not be null | Foreigen key of the User entity.  <br>(Mandatory) |\n\n#### Sample Request:\n\n``` json\n{\n    \"name\": \"Java\"\n}\n\n ```\n\n#### **Response Format:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| id | Long | collectionId is autogenerated. |\n| name | String | Name of the collection (for confirmation). |\n| user | Long | User data |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Collection saved successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Java\"\n    }\n}\n\n ```\n\n# Get Collection byId\n\n- **Feature: Get Collection by ID**\n    \n- **EndPoint URL : \" /api/collection/id \"**\n    \n- **HTTP Methods: GET**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | int | Mandatory field. | To get the data of particular Id |\n\n#### Response Format:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| id | int | Id of the particular Collection |\n| name | String | Name of the particular collection |\n\n#### Sample Response:-\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Collection found successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Java\"\n    }\n}\n\n ```\n\n# Get All Collection\n\n- **Featrue: Get All Collections**\n    \n- **EndPoint URL : \" /api/collection/ \"**\n    \n- **HTTP Methods: GET**\n    \n\n#### Response Response:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| id | int | Id of the particular Collection |\n| name | String | Name of the particular collection |\n\n#### Sample Formate:-\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Collection found successfully\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"Java\"\n        }\n    ]\n}\n\n ```\n\n# Update Collection\n\n- **Feature: Update collection**\n    \n- **EndPoint URL : \" /api/collection \"**\n    \n- **HTTP Methods: PUT**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | Positive int value,Not be null. | Id of Collection for update. |\n| name | string | Mandatory field. | Updated name of Collection. |\n\n#### Sample Request:\n\n``` json\n{\n    \"id\" : 1,\n    \"name\" : \"DataBase\"\n}\n\n ```\n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| id | Long | Id of updated Collection. |\n| name | String | Updated name of the collection (for confirmation). |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Collection updated successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"DataBase\"\n    }\n}\n\n ```\n\n## Delete Collection byId\n\n- **Feature: Delete collection byId**\n    \n- **EndPoint URL : \" /api/collection/id \"**\n    \n- **HTTP Methods: DELETE**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | int | Mandatory field. | To get the data of particular Id |\n\n#### Sample Response:-\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Collection deleted successfully\"\n}\n\n ```\n\n# Get Collection by UserId\n\n- **Featrue: Get All Collections by UserID**\n    \n- **EndPoint URL : \" /api/collection/user/id \"**\n    \n- **HTTP Methods: GET**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | int | Mandatory field. | To get the data of particular userId |\n\n#### Response Response:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| id | int | Id of the particular Collection |\n| name | String | Name of the particular collection |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Collection found successfully\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"ASP\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"BCA\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Java\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"SQL\"\n        }\n    ]\n}\n\n ```"
		},
		{
			"name": "Leaderboard API",
			"item": [],
			"description": "## Add types of Leaderboard\n\n- **Feature** : add Leaderboard\n- **Endpoint URL** : \"/api/leaderboard\"\n- **Http Method** : post\n    \n\n#### **Request Formate:**\n\n| Field | Type | Validation | Description |\n| --- | --- | --- | --- |\n| userQuiz | UserQuizDto | Not null,Must exist in userQuiz table | User quiz details |\n| player | PlayerDto | Not null,Must exist in Player table | Player details |\n| points | int | N/A | Points earned in the quiz |\n\n#### Sample Request:\n\nJSON\n\n``` json\n{\n    \"id\":3,\n    \"userQuiz\":{\n        \"id\":1\n    },\n    \"player\":{\n        \"id\":2\n    },\n    \"points\" : 1999\n}\n\n ```\n\n#### **Response Formate:**\n\n| Field | Type | Validation | Description |\n| --- | --- | --- | --- |\n| id | Long | N/A | id of particular inserted Leaderboard |\n| userQuiz | UserQuizDto | N/A | User quiz details |\n| player | PlayerDto | N/A | Player details |\n| points | int | N/A | Points earned in the quiz |\n\n#### **Sample Response:**\n\nJSON\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Leaderboard saved successfully\",\n    \"data\": {\n        \"id\": 3,\n        \"userQuiz\": {\n            \"id\": 1,\n            \"name\": \"Art Quiz\",\n            \"quiz\": {\n                \"id\": 1,\n                \"name\": \"Java Quiz\",\n                \"description\": \"A quiz about Java fundamentals.\",\n                \"coverImage\": \"java.png\",\n                \"language\": \"English\",\n                \"status\": \"draft\",\n                \"type\": {\n                    \"id\": 1,\n                    \"name\": \"General Knowledge Quiz\"\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"user_john\",\n                    \"email\": \"john@example.com\",\n                    \"active\": true\n                },\n                \"deleted\": false\n            },\n            \"players\": 10,\n            \"time\": 50,\n            \"code\": 716068,\n            \"performancePercentage\": 100\n        },\n        \"player\": {\n            \"id\": 2,\n            \"name\": \"Kevin\"\n        },\n        \"points\": 1999\n    }\n}\n\n ```\n\n## Get Leaderboard By Id\n\n- **Feature: Get a Leaderboard**\n- **EndPoint URL : \" /api/leaderboard/{id}\"**\n- **HTTP Methods: GET**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | Mandatory field. | To get the data of particular Id |\n\n#### **Response Format:**\n\n| Field | Type | Validation | Description |\n| --- | --- | --- | --- |\n| id | Long | N/A | id of particular get Leaderboard |\n| userQuiz | UserQuizDto | N/A | User quiz details |\n| player | PlayerDto | N/A | Player details |\n| points | int | N/A | Points earned in the quiz |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Leaderboard found successfully\",\n    \"data\": {\n        \"id\": 8,\n        \"userQuiz\": {\n            \"id\": 1,\n            \"name\": \"Art Quiz\",\n            \"quiz\": {\n                \"id\": 1,\n                \"name\": \"Java Quiz\",\n                \"description\": \"A quiz about Java fundamentals.\",\n                \"coverImage\": \"java.png\",\n                \"language\": \"English\",\n                \"status\": \"draft\",\n                \"type\": {\n                    \"id\": 1,\n                    \"name\": \"General Knowledge Quiz\"\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"user_john\",\n                    \"email\": \"john@example.com\",\n                    \"active\": true\n                },\n                \"deleted\": false\n            },\n            \"players\": 10,\n            \"time\": 50,\n            \"code\": 716068,\n            \"performancePercentage\": 100\n        },\n        \"player\": {\n            \"id\": 2,\n            \"name\": \"Kevin\"\n        },\n        \"points\": 567\n    }\n}\n\n ```\n\n## Get all Leaderboard\n\n- **Feature: Get all existing Leaderboard data**\n- **EndPoint URL : \" /api/leaderboard\"**\n- **HTTP Methods: GET**\n    \n\n#### **Response Format:**\n\n| Field | Type | Validation | Description |\n| --- | --- | --- | --- |\n| id | Long | N/A | id of particular get Leaderboard |\n| userQuiz | UserQuizDto | N/A | User quiz details |\n| player | PlayerDto | N/A | Player details |\n| points | int | N/A | Points earned in the quiz |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Leaderboard found successfully\",\n    \"data\": [\n        {\n            \"id\": 7,\n            \"points\": 12300\n        },\n        {\n            \"id\": 8,\n            \"userQuiz\": {\n                \"id\": 1,\n                \"name\": \"Art Quiz\",\n                \"quiz\": {\n                    \"id\": 1,\n                    \"name\": \"Java Quiz\",\n                    \"description\": \"A quiz about Java fundamentals.\",\n                    \"coverImage\": \"java.png\",\n                    \"language\": \"English\",\n                    \"status\": \"draft\",\n                    \"type\": {\n                        \"id\": 1,\n                        \"name\": \"General Knowledge Quiz\"\n                    },\n                    \"user\": {\n                        \"id\": 1,\n                        \"username\": \"user_john\",\n                        \"email\": \"john@example.com\",\n                        \"active\": true\n                    },\n                    \"deleted\": false\n                },\n                \"players\": 10,\n                \"time\": 50,\n                \"code\": 716068,\n                \"performancePercentage\": 100\n            },\n            \"player\": {\n                \"id\": 2,\n                \"name\": \"Kevin\"\n            },\n            \"points\": 567\n        },\n        {\n            \"id\": 11,\n            \"points\": 345\n        },\n        {\n            \"id\": 12,\n            \"points\": 345\n        },\n        {\n            \"id\": 13,\n            \"points\": 345\n        },\n        {\n            \"id\": 14,\n            \"points\": 1244\n        }\n    ]\n}\n\n ```\n\n# Update Leaderboard\n\n- **Feature: Put Leaderboard**\n- **EndPoint URL : \" /api/leaderboard\"**\n- **HTTP Methods: PUT**\n    \n\n#### **Request Formate:**\n\n| Field | Type | Validation | Description |\n| --- | --- | --- | --- |\n| id | Long | Not Null | Id of perticular questionType. |\n| userQuiz | UserQuizDto | Not Null,Must Exist in userQuiz Table | User quiz details |\n| player | PlayerDto | Not Null,Must Exist in player Table | Player details |\n| points | int | N/A | Points earned in the quiz |\n\n#### Sample Request:\n\nJSON\n\n``` json\n{\n    \"id\":3,\n    \"userQuiz\":{\n        \"id\":1\n    },\n    \"player\":{\n        \"id\":2\n    },\n    \"points\" : 2014\n}\n\n ```\n\n#### Sample Response:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| id | Long | Id of the particular Leaderboard data |\n| userQuiz | UserQuizDto | User quiz details |\n| player | PlayerDto | Player details |\n| points | int | Points of the particular updated Leaderboard |\n\n#### Sample Format:-\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Leaderboard updated successfully\",\n    \"data\": {\n        \"id\": 8,\n        \"userQuiz\": {\n            \"id\": 1,\n            \"name\": \"Art Quiz\",\n            \"quiz\": {\n                \"id\": 1,\n                \"name\": \"Java Quiz\",\n                \"description\": \"A quiz about Java fundamentals.\",\n                \"coverImage\": \"java.png\",\n                \"language\": \"English\",\n                \"status\": \"draft\",\n                \"type\": {\n                    \"id\": 1,\n                    \"name\": \"General Knowledge Quiz\"\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"user_john\",\n                    \"email\": \"john@example.com\",\n                    \"active\": true\n                },\n                \"deleted\": false\n            },\n            \"players\": 10,\n            \"time\": 50,\n            \"code\": 716068,\n            \"performancePercentage\": 100\n        },\n        \"player\": {\n            \"id\": 2,\n            \"name\": \"Kevin\"\n        },\n        \"points\": 981\n    }\n}\n\n ```\n\n## Delete Leaderboard By Id\n\n- **Feature: Delete a Leaderboard**\n- **EndPoint URL : \" /api/leaderboard/{id}\"**\n- **HTTP Methods: DELETE**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | Mandatory field. | To get the data of particular Id |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Leaderboard deleted successfully.\"\n}\n\n ```"
		},
		{
			"name": "AnswerOption API",
			"item": [],
			"description": "## Add types of AnswerOption\n\n- **Feature** : add AnswerOption\n- **Endpoint URL** : \"/api/answer-option\"\n- **Http Method** : post\n    \n\n#### **Request Format:**\n\n| Field | Type | Validation | Description |\n| --- | --- | --- | --- |\n| name | String | Name is Mandatory | Name of the AnswerOption |\n\n#### Sample Request:\n\nJSON\n\n``` json\n{\n    \"name\":\"true-false\"\n}\n\n ```\n\n#### **Response Format:**\n\n| Field | Type | Description |\n| --- | --- | --- |\n| name | String | Name of the AnswerOption |\n\n#### **Sample Response:**\n\nJSON\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"AnswerOption saved successfully\",\n    \"data\": {\n        \"id\":3,\n        \"name\": \"true-false\"\n    }\n}\n\n ```\n\n# Get AnswerOption byId\n\n- **Feature: Get** AnswerOption **by ID**\n- **EndPoint URL : \" /api/**answer-option**/{id}\"**\n    \n- **HTTP Methods: GET**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | Mandatory field. | To get the data of particular Id |\n\n#### Response Format:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| name | String | Name of the particular AnswerOption |\n\n#### Sample Response:-\n\nJSON\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"AnswerOption found successfully\",\n    \"data\": {\n        \"id\":3,\n        \"name\": \"true-false\"\n    }\n}\n\n ```\n\n# Get All AnswerOption\n\n- **Feature: Get All** AnswerOption\n    \n- **EndPoint URL : \" /api/**answer-option**\"**\n    \n- **HTTP Methods: GET**\n    \n\n#### Response Format:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| name | String | Name of the particular AnswerOption |\n\n#### Sample Format:-\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"AnswerOption found successfully\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"one ome one\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Multi choice\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"true-false\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"TRUE-FALSE\"\n        },\n        {\n            \"id\": 5,\n            \"name\": \"Blanks\"\n        }\n    ]\n}\n\n ```\n\n# Update AnswerOption\n\n- **Feature: Put** AnswerOption\n    \n- **EndPoint URL : \" /api/**answer-option**\"**\n    \n- **HTTP Methods: PUT**\n    \n\n#### Response Format:-\n\n| **Field** | **Type** | **Validation** | **Description** |\n| --- | --- | --- | --- |\n| id | Long | Mandatory field. | id of particular AnswerOption |\n| name | String | Mandatory field and Must be Unique. | Name of the particular AnswerOption |\n\n#### Sample Format:-\n\n``` json\n{\n    \"id\":4,\n    \"name\":\"TRUE-FALSE\"\n}\n\n ```\n\n#### Sample Response:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| name | String | Name of the particular updated AnswerOption |\n\n#### Sample Format:-\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"AnswerOption updated successfully\",\n    \"data\": {\n        \"id\": 2,\n        \"name\": \"Multi choice\"\n    }\n}\n\n ```\n\n# Delete AnswerOption byId\n\n- **Feature: Delete** AnswerOption **by ID**\n    \n- **EndPoint URL : \" /api/**answer-option**/{id}\"**\n    \n- **HTTP Methods: DELETE**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | Mandatory field. | To get the data of particular Id |\n\n#### Sample Response:-\n\nJSON\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"AnswerOption deleted successfully.\"\n}\n\n ```"
		},
		{
			"name": "Player Quiz API",
			"item": [],
			"description": "## Add Player Quiz\n\n- **Featrue: Add New Player Quiz**\n    \n- **EndPoint URL : \" /api/player/quiz\"**\n    \n- **HTTP Methods: POST**\n    \n\n#### **Request Formate:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| name | string | must not contain a special character , length max 30, mandatory field. | The name of the quiz, adhering to character restrictions.  <br>(Mandatory) |\n| quiz | QuizDto | Must be provided | An object that includes quiz details such as the quiz ID.  <br>(Mandatory) |\n| players | int | Non-negative integer (0 or more) | Number of participants in the quiz.  <br>(Optional) |\n| time | double | Positive number greater than 0.01 | Duration of the quiz, assumed to be in minutes.  <br>(Mandatory) |\n| performancePercentage | boolean | Number between 0 and 100 inclusive | Performance Percentage of a player in a quiz is a numerical value that represents the accuracy of the player's answers during the quiz.  <br>(Optional) |\n\n#### Sample Request:\n\n``` json\n{\n  \"name\": \"Art Quiz\",\n  \"quiz\": {\n    \"id\": 1\n   },\n  \"players\": 10,\n  \"time\": 50,\n  \"performancePercentage\": 100\n}\n\n ```\n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| name | String | The name of the Player quiz. |\n| quiz | Object | An object with more details about the quiz. |\n| players | int | The number of players that participated in the quiz. |\n| time | double | The duration of the quiz. |\n| performancePercentage | double | Performance Percentage of a player in a quiz is a numerical value that represents the accuracy of the player's answers during the quiz. |\n| code | int | A unique code associated with this specific quiz instance. |\n\n#### **Sample Response:**\n\n``` json\n{\n  \"resultCode\": 1001,\n  \"resultMessage\": \"Player Quiz saved successfully\",\n  \"data\": {\n    \"name\": \"Art Quiz\",\n    \"quiz\": {\n      \"id\": 1,\n      \"deleted\": false\n    },\n    \"players\": 10,\n    \"time\": 50,\n    \"performancePercentage\": 100,\n    \"code\": 934348\n  }\n}\n\n ```\n\n## Get Player Quiz By Id\n\n- **Featrue: Get a** Player **Quiz**\n    \n- **EndPoint URL : \" /api/**Player**/quiz/{id}\"**\n    \n\n#### **Request Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| id | Long | Auto generated id of a existing PlayerQuiz. |\n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| name | String | The name of the Player quiz. |\n| quiz | Object | An object with more details about the quiz. |\n| players | int | The number of players that participated in the quiz. |\n| time | double | The duration of the quiz. |\n| performancePercentage | double | Performance Percentage of a player in a quiz is a numerical value that represents the accuracy of the player's answers during the quiz. |\n| code | int | A unique code associated with this specific quiz instance. |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player quiz found successfully\",\n    \"data\": {\n        \"name\": \"Art Quiz\",\n        \"quiz\": {\n            \"id\": 1,\n            \"name\": \"qqqq\",\n            \"description\": \"A quiz about Java fundamentals.A quiz about Java fundamentals.A quiz about Java fundamentals.A qui.\",\n            \"coverImage\": \"java.png\",\n            \"language\": \"\",\n            \"status\": \"draft\",\n            \"type\": {\n                \"id\": 10,\n                \"name\": \"wsfwef\"\n            },\n            \"user\": {\n                \"id\": 1,\n                \"username\": \"fgdrg\",\n                \"email\": \"ans@gmail.com\",\n                \"password\": \"dsefeW1@\",\n                \"active\": false\n            },\n            \"deleted\": false\n        },\n        \"players\": 0,\n        \"time\": 50.0,\n        \"performancePercentage\": 0.0,\n        \"code\": 164372\n    }\n}\n\n ```\n\n## Get all Quizzes\n\n- **Featrue: Get all existing** Player **Quizzes**\n    \n- **EndPoint URL : \" /api/**Player**/quiz\"**\n    \n- **HTTP Methods: GET**\n    \n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| name | String | The name of the Player quiz. |\n| quiz | Object | An object with more details about the quiz. |\n| players | int | The number of players that participated in the quiz. |\n| time | double | The duration of the quiz. |\n| performancePercentage | double | Performance Percentage of a player in a quiz is a numerical value that represents the accuracy of the player's answers during the quiz. |\n| code | int | A unique code associated with this specific quiz instance. |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player quiz found successfully\",\n    \"data\": [\n        {\n            \"name\": \"Art Quiz\",\n            \"quiz\": {\n                \"id\": 1,\n                \"name\": \"qqqq\",\n                \"description\": \"A quiz about Java fundamentals.A quiz about Java fundamentals.A quiz about Java fundamentals.A qui.\",\n                \"coverImage\": \"java.png\",\n                \"language\": \"\",\n                \"status\": \"draft\",\n                \"type\": {\n                    \"id\": 10,\n                    \"name\": \"wsfwef\"\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"fgdrg\",\n                    \"email\": \"ans@gmail.com\",\n                    \"password\": \"dsefeW1@\",\n                    \"active\": false\n                },\n                \"deleted\": false\n            },\n            \"players\": 0,\n            \"time\": 50.0,\n            \"performancePercentage\": 0.0,\n            \"code\": 164372\n        },\n        {\n            \"name\": \"Java Quiz\",\n            \"quiz\": {\n                \"id\": 1,\n                \"name\": \"qqqq\",\n                \"description\": \"A quiz about Java fundamentals.A quiz about Java fundamentals.A quiz about Java fundamentals.A qui.\",\n                \"coverImage\": \"java.png\",\n                \"language\": \"\",\n                \"status\": \"draft\",\n                \"type\": {\n                    \"id\": 10,\n                    \"name\": \"wsfwef\"\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"fgdrg\",\n                    \"email\": \"ans@gmail.com\",\n                    \"password\": \"dsefeW1@\",\n                    \"active\": false\n                },\n                \"deleted\": false\n            },\n            \"players\": 10,\n            \"time\": 50.0,\n            \"performancePercentage\": 0.0,\n            \"code\": 359977\n        },\n        {\n            \"name\": \"Java Quiz\",\n            \"quiz\": {\n                \"id\": 1,\n                \"name\": \"qqqq\",\n                \"description\": \"A quiz about Java fundamentals.A quiz about Java fundamentals.A quiz about Java fundamentals.A qui.\",\n                \"coverImage\": \"java.png\",\n                \"language\": \"\",\n                \"status\": \"draft\",\n                \"type\": {\n                    \"id\": 10,\n                    \"name\": \"wsfwef\"\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"fgdrg\",\n                    \"email\": \"ans@gmail.com\",\n                    \"password\": \"dsefeW1@\",\n                    \"active\": false\n                },\n                \"deleted\": false\n            },\n            \"players\": 10,\n            \"time\": 50.0,\n            \"performancePercentage\": 80.0,\n            \"code\": 378437\n        },\n        {\n            \"name\": \"DSA Quiz\",\n            \"quiz\": {\n                \"id\": 1,\n                \"name\": \"qqqq\",\n                \"description\": \"A quiz about Java fundamentals.A quiz about Java fundamentals.A quiz about Java fundamentals.A qui.\",\n                \"coverImage\": \"java.png\",\n                \"language\": \"\",\n                \"status\": \"draft\",\n                \"type\": {\n                    \"id\": 10,\n                    \"name\": \"wsfwef\"\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"fgdrg\",\n                    \"email\": \"ans@gmail.com\",\n                    \"password\": \"dsefeW1@\",\n                    \"active\": false\n                },\n                \"deleted\": false\n            },\n            \"players\": 10,\n            \"time\": 50.0,\n            \"performancePercentage\": 80.0,\n            \"code\": 769380\n        }\n    ]\n}\n\n ```\n\n## Update PlayerQuiz\n\n- **Featrue: Update** Player **Quiz**\n    \n- **EndPoint URL : \" /api/**Player**/quiz\"**\n    \n- **HTTP Methods: PUT**\n    \n\n#### **Request Formate:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | Not Null | Auto generated id of a existing PlayerQuiz.  <br>(Mandatory) |\n| name | String | must not contain a special character , length max 30, mandatory field. | The name of the quiz, adhering to character restrictions.  <br>(Mandatory) |\n| players | int | Non-negative integer (0 or more) | Number of participants in the quiz.  <br>(Mandatory) |\n| time | double | Positive number greater than 0.01 | Duration of the quiz, assumed to be in minutes.  <br>(Mandatory) |\n| quiz | QuizDto | Must be provided | QuizDtoMust be providedAn object that includes quiz details such as the quiz ID.  <br>(Mandatory) |\n\n#### Sample Request:\n\n``` json\n{\n    \"id\":33,\n    \"name\": \"Java 123\",\n    \"time\":50,\n    \"players\":35,\n    \"quiz\":{\n    \"id\":1\n  }\n}\n\n ```\n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| name | String | The name of the Player quiz. |\n| quiz | Object | An object with more details about the quiz. |\n| players | int | The number of players that participated in the quiz. |\n| time | double | The duration of the quiz. |\n| performancePercentage | double | Performance Percentage of a player in a quiz is a numerical value that represents the accuracy of the player's answers during the quiz. |\n| code | int | A unique code associated with this specific quiz instance. |\n\n#### **Sample** Request:\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player Quiz updated successfully\",\n    \"data\": {\n        \"name\": \"Java 123\",\n        \"quiz\": {\n            \"id\": 1,\n            \"name\": \"qqqq\",\n            \"description\": \"A quiz about Java fundamentals.A quiz about Java fundamentals.A quiz about Java fundamentals.A qui.\",\n            \"coverImage\": \"java.png\",\n            \"language\": \"\",\n            \"status\": \"draft\",\n            \"type\": {\n                \"id\": 10,\n                \"name\": \"wsfwef\"\n            },\n            \"user\": {\n                \"id\": 1,\n                \"username\": \"fgdrg\",\n                \"email\": \"ans@gmail.com\",\n                \"active\": false\n            },\n            \"deleted\": false\n        },\n        \"players\": 35,\n        \"time\": 50.0,\n        \"performancePercentage\": 100.0,\n        \"code\": 123456\n    }\n}\n\n ```\n\n## Delete PlayerQuiz By Id\n\n- **Featrue: Delete a** PlayerQuiz\n    \n- **EndPoint URL : \" /api/**Player**/quiz/{id}\"**\n    \n- **HTTP Methods: DELETE**\n    \n\n#### **Request Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| id | Long | Primary key of PlayerQuiz. |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player Quiz deleted successfully\"\n}\n\n ```",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Quiz API",
			"item": [],
			"description": "## Add Quiz\n\n- **Feature: Add new Quiz**\n    \n- **EndPoint URL : \" /api/quiz\"**\n    \n- **HTTP Methods: POST**\n    \n\n#### **Request Formate:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| name | string | Must be unique for a user, must not contain a special character , length max 30, allow blank spaces, mandatory field. | Quiz name for creating new quiz.  <br>(Mandatory) |\n| description | string | Maximum length 300 , optional | Description of Quiz.  <br>(Optional) |\n| coverImage | string | NA | Set coverImage for Quiz.  <br>(Optional) |\n| language | string | NA | set Language of Quiz.  <br>(Optional) |\n| status | string | Value must be 'Created' or 'Draft' | status of quiz  <br>(Mandatory) |\n| is_deleted | boolean | By default value set to 'false' | Check wether Quiz is deleted or not.  <br>(Optional) |\n| user | Long | Duplicate key not allow , Not be null | Foreigen key of the User entity.  <br>(Mandatory) |\n| type | Long | Duplicate key not allow , Not be null | Foreigen key of the Quiz_Type entity.  <br>(Mandatory) |\n| collection | Long | Duplicate key not allow , Not be null | Foreigen key of the Collection entity.  <br>(Mandatory) |\n| points | Long | Duplicate key not allow , Not be null | Foreigen key of the Point_config entity.  <br>(Mandatory) |\n\n#### Sample Request:\n\n``` json\n{\n    \"name\": \"Java Quiz\",\n    \"description\": \"This is java quiz\",\n    \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n    \"language\": \"English\",\n    \"status\": \"Created\",\n    \"user\": {\n        \"id\": 5\n    },\n    \"type\": {\n        \"id\": 5\n    },\n    \"collection\": {\n        \"id\": 4\n    },\n    \"points\": {\n        \"id\": 3\n    }\n}\n\n ```\n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| name | String | Name of the Quiz |\n| description | String | Description of the Quiz |\n| coverImage | String | show cover image of quiz |\n| language | String | Language of the quiz |\n| status | String | Status of quiz |\n| user | Long | User data |\n| type | Long | Quiz type data |\n| collection | Long | Collection data |\n| points | Long | Point_config data |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Quiz saved successfully\",\n    \"data\": {\n        \"name\": \"Java Quiz\",\n        \"description\": \"This is java quiz\",\n        \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n        \"language\": \"English\",\n        \"Status\": \"Created\",\n        \"user\": {\n            \"id\": 5,\n            \"username\": \"user 5\",\n            \"email\": \"gmail.gmail.com\",\n            \"active\": false\n        },\n        \"type\": {\n            \"id\": 5,\n            \"name\": \"type 5\"\n        },\n        \"collection\": {\n            \"id\": 4,\n            \"name\": \"Col 4\"\n        },\n        \"points\": {\n            \"id\": 3,\n            \"name\": \"point 3\",\n            \"description\": \"point config\"\n        }\n    }\n}\n\n ```\n\n## Get Quiz By Id\n\n- **Feature: Get a Quiz**\n    \n- **EndPoint URL : \" /api/quiz/{id}\"**\n    \n- **HTTP Methods: GET**\n    \n\n#### **Request Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| id | Long | Primary key of Quiz. |\n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| name | String | Name of the Quiz |\n| description | String | Description of the Quiz |\n| coverImage | String | show cover image of quiz |\n| language | String | Language of the quiz |\n| status | String | Status of quiz |\n| user | Long | User data |\n| type | Long | Quiz type data |\n| collection | Long | Collection data |\n| points | Long | Point_config data |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Quiz found successfully\",\n    \"data\": {\n        \"name\": \"Java Quiz\",\n        \"description\": \"This is java quiz\",\n        \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n        \"language\": \"English\",\n        \"Status\": \"Created\",\n        \"user\": {\n            \"id\": 5,\n            \"username\": \"user 5\",\n            \"email\": \"gmail.gmail.com\",\n            \"active\": false\n        },\n        \"type\": {\n            \"id\": 5,\n            \"name\": \"type 5\"\n        },\n        \"collection\": {\n            \"id\": 4,\n            \"name\": \"Col 4\"\n        },\n        \"points\": {\n            \"id\": 3,\n            \"name\": \"point 3\",\n            \"description\": \"point config\"\n        }\n    }\n}\n\n ```\n\n## Get all Quizzes\n\n- **Feature: Get all existing Quizzes**\n    \n- **EndPoint URL : \" /api/quiz\"**\n    \n- **HTTP Methods: GET**\n    \n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| name | String | Name of the Quiz |\n| description | String | Description of the Quiz |\n| coverImage | String | show cover image of quiz |\n| language | String | Language of the quiz |\n| user | Long | User data |\n| type | Long | Quiz type data |\n| collection | Long | Collection data |\n| points | Long | Point_config data |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Quiz found successfully\",\n    \"data\": [\n        {\n            \"name\": \"Update Quiz\",\n            \"description\": \"This is java quiz\",\n            \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n            \"language\": \"Hindi\",\n            \"user\": {\n                \"id\": 1,\n                \"username\": \"user_john\",\n                \"email\": \"john@example.com\",\n                \"active\": true\n            },\n            \"type\": {\n                \"id\": 1,\n                \"name\": \"General Knowledge Quiz\"\n            }\n        },\n        {\n            \"name\": \"update 4\",\n            \"description\": \"This is java quiz\",\n            \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n            \"language\": \"Hindi\",\n            \"user\": {\n                \"id\": 2,\n                \"username\": \"user 2\",\n                \"email\": \"xy@gmailcom\",\n                \"active\": false\n            },\n            \"type\": {\n                \"id\": 2,\n                \"name\": \"type 2\"\n            }\n        },\n        {\n            \"name\": \"update\",\n            \"description\": \"This is java quiz\",\n            \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n            \"language\": \"Hindi\",\n            \"user\": {\n                \"id\": 3,\n                \"username\": \"user new\",\n                \"email\": \"pqr@gmail.com\",\n                \"active\": false\n            },\n            \"type\": {\n                \"id\": 3,\n                \"name\": \"Quiz type3\"\n            },\n            \"collection\": {\n                \"id\": 1,\n                \"name\": \"Java\"\n            },\n            \"points\": {\n                \"id\": 1,\n                \"name\": \"no points\",\n                \"description\": \"user doesn't choose any option\"\n            }\n        },\n        {\n            \"name\": \"update java quiz new\",\n            \"description\": \"This is java quiz\",\n            \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n            \"language\": \"Hindi\",\n            \"user\": {\n                \"id\": 4,\n                \"username\": \"user new\",\n                \"email\": \"aa@abc.com\",\n                \"active\": false\n            },\n            \"type\": {\n                \"id\": 4,\n                \"name\": \"type 4\"\n            },\n            \"collection\": {\n                \"id\": 3,\n                \"name\": \"col 3\"\n            },\n            \"points\": {\n                \"id\": 2,\n                \"name\": \"config\",\n                \"description\": \"hey\"\n            }\n        },\n        {\n            \"name\": \"Java Quiz\",\n            \"description\": \"This is java quiz\",\n            \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n            \"language\": \"English\",\n            \"user\": {\n                \"id\": 5,\n                \"username\": \"user 5\",\n                \"email\": \"gmail.gmail.com\",\n                \"active\": false\n            },\n            \"type\": {\n                \"id\": 5,\n                \"name\": \"type 5\"\n            },\n            \"collection\": {\n                \"id\": 4,\n                \"name\": \"Col 4\"\n            },\n            \"points\": {\n                \"id\": 3,\n                \"name\": \"point 3\",\n                \"description\": \"point config\"\n            }\n        }\n    ]\n}\n\n ```\n\n## Update Quiz\n\n- **Feature: Update Quiz**\n    \n- **EndPoint URL : \" /api/quiz\"**\n    \n- **HTTP Methods: PUT**\n    \n\n#### **Request Formate:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | Id must not be null. | Get Existing Quiz by Id.  <br>(Mandatory) |\n| name | string | Must be unique for a user, must not contain a special character , length max 30, allow blank spaces, mandatory field. | Quiz name for creating new quiz.  <br>(Mandatory) |\n| description | string | Maximum length 300 , optional | Description of Quiz.  <br>(Mandatory) |\n| coverImage | string | NA | Set coverImage for Quiz.  <br>(Mandatory) |\n| language | string | NA | set Language of Quiz.  <br>(Mandatory) |\n| status | string | Value must be 'Created' or 'Draft' | Status of Quiz  <br>(Mandatory) |\n| user | Long | Duplicate key not allow , Not be null | Foreigen key of the User entity.  <br>(Mandatory) |\n| type | Long | Duplicate key not allow , Not be null | Foreigen key of the Quiz_Type entity.  <br>(Mandatory) |\n| collection | Long | Duplicate key not allow , Not be null | Foreigen key of the Collection entity.  <br>(Mandatory) |\n| points | Long | Duplicate key not allow , Not be null | Foreigen key of the Point_config entity.  <br>(Mandatory) |\n\n#### Sample Request:\n\n``` json\n{\n    \"id\": 18,\n    \"name\": \"Updated Java Quiz\",\n    \"description\": \"This is java quiz\",\n    \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n    \"language\": \"English\",\n    \"status\": \"Draft\",\n    \"user\": {\n        \"id\": 5\n    },\n    \"type\": {\n        \"id\": 5\n    },\n    \"collection\": {\n        \"id\": 4\n    },\n    \"points\": {\n        \"id\": 3\n    }\n}\n\n ```\n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| name | String | Name of the Quiz |\n| description | String | Description of the Quiz |\n| coverImage | String | show cover image of quiz |\n| language | String | Language of the quiz |\n| Status | String | Status of quiz |\n| user | Long | User data |\n| type | Long | Quiz type data |\n| collection | Long | Collection data |\n| points | Long | Point_config data |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Quiz updated successfully\",\n    \"data\": {\n        \"name\": \"Updated Java Quiz\",\n        \"description\": \"This is java quiz\",\n        \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n        \"language\": \"English\",\n        \"Status\": \"Created\"\n        \"user\": {\n            \"id\": 5,\n            \"username\": \"user 5\",\n            \"email\": \"gmail.gmail.com\",\n            \"active\": false\n        },\n        \"type\": {\n            \"id\": 5,\n            \"name\": \"type 5\"\n        },\n        \"collection\": {\n            \"id\": 4,\n            \"name\": \"Col 4\"\n        },\n        \"points\": {\n            \"id\": 3,\n            \"name\": \"point 3\",\n            \"description\": \"point config\"\n        }\n    }\n}\n\n ```\n\n## Delete Quiz By Id\n\n- **Feature: Delete a Quiz**\n    \n- **EndPoint URL : \" /api/quiz/{id}\"**\n    \n- **HTTP Methods: DELETE**\n    \n\n#### **Request Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| id | Long | Primary key of Quiz. |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Quiz deleted successfully\"\n}\n\n ```",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "QuestionType API",
			"item": [],
			"description": "## Add types of Question\n\n- **Feature** : add QuestionType\n- **Endpoint URL** : \"/api/question/types\"\n    \n- **Http Method** : post\n    \n\n#### **Request Formate:**\n\n| Field | Type | Validation | Description |\n| --- | --- | --- | --- |\n| name | String | Name is Mandatory | Name of the QuestionType |\n\n#### Sample Request:\n\n``` json\n{\n   \"name\" : \"Mathemetical Quiz\",\n}\n\n ```\n\n#### **Response Formate:**\n\n| Field | Type | Validation | Description |\n| --- | --- | --- | --- |\n| resultCode | Long | N/A | It is the custom Result Code |\n| resultMessage | String | N/A | It is the custom message |\n| name | String | Name is Mandatory | Name of the QuestionType |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"QuestionType saved successfully\",\n    \"data\": {\n        \"name\": \"Java Quiz\"\n    }\n}\n\n ```\n\n# Get QuestionType byId\n\n- **Featrue: Get** QuestionType **by ID**\n- **EndPoint URL : \" /api/**question/types**/id \"**\n    \n- **HTTP Methods: GET**\n    \n\n#### **Request Formate:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | Mandatory field. | To get the data of particular Id |\n\n#### Response Formate:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| resultCode | Long | It is the custom Result Code |\n| resultMessage | String | It is the custom message |\n| name | String | Name of the particular QuestionType |\n\n#### Sample Response:-\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"QuestionType found successfully\",\n    \"data\": {\n        \"name\": \"General Knowledge Quiz\"\n    }\n}\n\n ```\n\n<<------------------------------------------------------------------------------------\n\n# Get All QuestionType\n\n- **Featrue: Get All** QuestionType\n- **EndPoint URL : \" /api/**question/types**/ \"**\n    \n- **HTTP Methods: GET**\n    \n\n#### Sample Response:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| resultCode | Long | It is the custom Result Code |\n| resultMessage | String | It is the custom message |\n| name | String | Name of the particular QuestionType |\n\n#### Sample Formate:-\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"QuestionType found successfully\",\n    \"data\": [\n        {\n            \"name\": \"general knowledge\"\n        },\n        {\n            \"name\": \"General Knowledge Quiz\"\n        },\n        {\n            \"name\": \"Sciece Quiz\"\n        },\n        {\n            \"name\": \"Social Science Quiz\"\n        },\n        {\n            \"name\": \"Social Science Quiz\"\n        },\n        {\n            \"name\": \"Gujarati Quiz\"\n        }\n    ]\n}\n\n ```\n\n<<------------------------------------------------------------------------------------\n\n# Update QuestionType\n\n- **Feature: Update** QuestionType\n- **EndPoint URL : \" /api/**question/types **\"**\n    \n- **HTTP Methods: PUT**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | ID is mandatory field | Id of QuestionType for update. |\n| name | string | Mandatory field. | Updated name of QuestionType |\n\n#### Sample Request:\n\n``` json\n{\n    \"id\": \"29\",\n    \"name\":\"music test quiz\"\n}\n\n ```\n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| resultCode | String | It is the custom Result Code |\n| resultMessage | String | It is the custom message |\n| name | String | Updated name of the QuestionType (for confirmation). |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"QuestionType updated successfully\",\n    \"data\": {\n        \"name\": \"music test quiz\"\n    }\n}\n\n ```\n\n## **Delete** QuestionType **byId**\n\n- **Feature: Delete** QuestionType\n- **EndPoint URL : \" /api/**question/types**/id \"**\n    \n- **HTTP Methods: DELETE**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | long | Mandatory field. | To delete the data of particular Id |\n\n#### Response Formate:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| resultCode | Long | It is the custom Result Code |\n| resultMessage | String | It is the custom message |\n\n#### Sample Response:-\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"QuestionType deleted successfully\"\n}\n\n ```"
		},
		{
			"name": "Pointconfig API",
			"item": [],
			"description": "## Add Points Config\n\n- **Feature** : add points name Description\n- **Endpoint URL** : \"api/points\"\n- **Http Method** : post\n    \n\n#### **Request Formate:**\n\n| Field | Type | Validation | Description |\n| --- | --- | --- | --- |\n| name | String | Name is Mandatory | Name of the PointsConfig |\n| Description | String | Description can't a null | Description about points |\n\n#### Sample Request:\n\n``` json\n{\n   \"name\" : \"single points\",\n   \"Description\" : \"if answer is correct give a one point\"\n}\n\n ```\n\n#### **Response Formate:**\n\n| Field | Type | Validation | Description |\n| --- | --- | --- | --- |\n| resultCode | Long | N/A | It is the custom Result Code |\n| resultMessage | String | N/A | It is the custom message |\n| name | String | Name is Mandatory | Name of the PointsConfig |\n| Description | String | Description can't a null | Description about points |\n\n#### **Sample Response:**\n\n``` json\n{\n    {\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Points saved successfully\",\n    \"data\": {\n      \"name\" : \"single points\"\n      \"Description\" : \"if answer is correct give a one point\n    }\n}\n\n ```\n\n# Get PointConfig byId\n\n- **Featrue: Get PointConfig by ID**\n- **EndPoint URL : \" /api/points/id \"**\n- **HTTP Methods: GET**\n    \n\n#### **Request Formate:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | Mandatory field. | To get the data of particular Id |\n\n#### Response Formate:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| resultCode | Long | It is the custom Result Code |\n| resultMessage | String | It is the custom message |\n| name | String | Name of the particular points |\n| description | String | Description about points |\n\n#### Sample Response:-\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Points found successfully\",\n    \"data\": {\n        \"name\": \"no points\",\n        \"description\": \"user doesn't choose any option\"\n    }\n}\n\n ```\n\n<<------------------------------------------------------------------------------------\n\n# Get All PointsConfigs\n\n- **Featrue: Get All points**\n- **EndPoint URL : \" /api/points/ \"**\n- **HTTP Methods: GET**\n    \n\n#### Sample Response:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| resultCode | Long | It is the custom Result Code |\n| resultMessage | String | It is the custom message |\n| name | String | Name of the particular points |\n| description | String | Description about points |\n\n#### Sample Formate:-\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Points found successfully\",\n    \"data\": [\n        {\n            \"name\": \"no points\",\n            \"description\": \"user doesn't choose any option\"\n        },\n        {\n            \"name\": \"Double points\",\n            \"description\": \"user give answer Quikly\"\n        },\n        {\n            \"name\": \"minus points\",\n            \"description\": \"user give wrong answer\"\n        }\n    ]\n}\n\n ```\n\n<<------------------------------------------------------------------------------------\n\n# Update PointsConfig\n\n- **Feature: Update Points**\n- **EndPoint URL : \" /api/points \"**\n- **HTTP Methods: PUT**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | ID is mandatory field | Id of pointconfig for update. |\n| name | string | Mandatory field. | Updated name of pointsconfig |\n| description | String | not mandatory | Updated description of pointsconfig |\n\n#### Sample Request:\n\n``` json\n{\n    \"id\": \"19\",\n    \"name\": \"no points\",\n    \"description\" : \"user doesn't choose any option\"\n}\n\n ```\n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| resultCode | String | It is the custom Result Code |\n| resultMessage | String | It is the custom message |\n| name | String | Updated name of the points (for confirmation). |\n| description | String | Description about points(as we want to change) |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Points updated successfully\",\n    \"data\": {\n        \"name\": \"no points\",\n        \"description\": \"user doesn't choose any option\"\n    }\n}\n\n ```\n\n## Delete PointsConfig byId\n\n- **Feature: Delete Points**\n- **EndPoint URL : \" /api/points/id \"**\n- **HTTP Methods: DELETE**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | long | Mandatory field. | To delete the data of particular Id |\n\n#### Response Formate:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| resultCode | Long | It is the custom Result Code |\n| resultMessage | String | It is the custom message |\n\n#### Sample Response:-\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Points deleted successfully\"\n}\n\n ```"
		},
		{
			"name": "Question & QuestionAnswer API Copy",
			"item": [],
			"description": "## Add Question & QuestionAnswer\n\n- **Feature: Add Question & QuestionAnswer**\n    \n- **EndPoint URL : \" /api/questions \"**\n    \n- **HTTP Methods: POST**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| question | string | Max length: 3000. Should accept alphabets, numerics, special characters, and blank spaces. | The question to be added. |\n| timeLimit | integer | Must be in seconds. Minimum: 5, Maximum: 30. | Time limit for answering the question (in seconds). |\n| points | integer | Must be a whole number integer. | Points awarded for answering the question correctly. |\n| type_id | long | Must exist (non-null and non-zero). | The ID of the question type. |\n| quiz_id | long | Must exist (non-null and non-zero). | The ID of the quiz to which the question belongs. |\n| questionAnswers | array of objects | N/A | An array of question answers. |\n\n#### Question Answer Object:\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| questionOption | string | Max length: 3000. Should accept alphabets, numerics, special characters, and blank spaces. | The answer option for the question. |\n| correct | boolean | Default value is \"false\". | Indicates if the option is correct or not. Default value is \"false\". |\n\n#### Sample Request:\n\n``` json\n{\n  \"question\": \"What is the capital of India?\",\n  \"timeLimit\": 10,\n  \"points\": 5,\n    \"type\":{\n        \"id\":1\n    },\n    \"quiz\":{\n        \"id\":1\n    },\n  \"questionAnswers\": [\n    {\n      \"questionOption\": \"Delhi\",\n      \"correct\": true\n    },\n    {\n      \"questionOption\": \"Mumbai\",\n      \"correct\": false\n    },\n    {\n      \"questionOption\": \"Kolkata\",\n      \"correct\": false\n    },\n    {\n      \"questionOption\": \"Goa\",\n      \"correct\": false\n    }\n  ]\n}\n\n ```\n\n#### **Response Format:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| question | string | The question. |\n| timeLimit | integer | Time limit for answering the question (in seconds). |\n| points | integer | Points awarded for answering the question correctly. |\n| type_id | long | The ID of the question type. |\n| quiz_id | long | The ID of the quiz to which the question belongs. |\n| questionAnswers | array of objects | An array of question answers. |\n\n#### Question Answer Object:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| questionOption | string | The answer option for the question. |\n| correct | boolean | Indicates if the option is correct or not. |\n\n#### **Sample Response:**\n\n``` json\n {\n        \"question\": \"What is the capital of India?\",\n        \"timeLimit\": 10,\n        \"points\": 5,\n        \"type\": {\n            \"id\": 1\n        },\n        \"quiz\": {\n            \"id\": 1,\n            \"deleted\": false\n        },\n        \"questionAnswers\": [\n            {\n                \"questionOption\": \"Delhi\",\n                \"correct\": true\n            },\n            {\n                \"questionOption\": \"Mumbai\",\n                \"correct\": false\n            },\n            {\n                \"questionOption\": \"Kolkata\",\n                \"correct\": false\n            },\n            {\n                \"questionOption\": \"Goa\",\n                \"correct\": false\n            }\n        ]\n    }\n\n ```\n\n# Get All Question & QuestionAnswers\n\n- **Feature: Get All Questions**\n    \n- **EndPoint URL : \" /api/questions \"**\n    \n- **HTTP Methods: GET**\n    \n\n**Response Format:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| question | string | The question. |\n| timeLimit | integer | Time limit for answering the question (in seconds). |\n| points | integer | Points awarded for answering the question correctly. |\n| type | QuestionType | The object of the question type. |\n| quiz | Quiz | The object of the quiz to which the question belongs. |\n| questionAnswers | array of objects | An array of question answers. |\n\n#### Question Answer Object:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| questionOption | string | The answer option for the question. |\n| correct | boolean | Indicates if the option is correct or not. |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Questions and QuestionAnswers found successfully\",\n    \"data\": [\n        {\n            \"question\": \"What is the capital of India?\",\n            \"timeLimit\": 10,\n            \"points\": 5,\n            \"type\": {\n                \"id\": 1,\n                \"name\": \"multiple choice question\"\n            },\n            \"quiz\": {\n                \"id\": 3,\n                \"name\": \"Java Quiz\",\n                \"description\": \"A quiz about Java fundamentals.\",\n                \"coverImage\": \"java.png\",\n                \"language\": \"English\",\n                \"status\": \"draft\",\n                \"type\": {\n                    \"id\": 1,\n                    \"name\": \"General Knowledge Quiz\"\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"user_john\",\n                    \"email\": \"john@example.com\",\n                    \"active\": true\n                },\n                \"deleted\": false\n            },\n            \"questionAnswers\": [\n                {\n                    \"questionOption\": \"Delhi\",\n                    \"correct\": true\n                },\n                {\n                    \"questionOption\": \"Mumbai\",\n                    \"correct\": false\n                },\n                {\n                    \"questionOption\": \"Kolkata\",\n                    \"correct\": false\n                },\n                {\n                    \"questionOption\": \"Goa\",\n                    \"correct\": false\n                }\n            ]\n        },\n        {\n            \"question\": \"What is the capital of Italy?\",\n            \"timeLimit\": 10,\n            \"points\": 5,\n            \"type\": {\n                \"id\": 1,\n                \"name\": \"multiple choice question\"\n            },\n            \"quiz\": {\n                \"id\": 3,\n                \"name\": \"Java Quiz\",\n                \"description\": \"A quiz about Java fundamentals.\",\n                \"coverImage\": \"java.png\",\n                \"language\": \"English\",\n                \"status\": \"draft\",\n                \"type\": {\n                    \"id\": 1,\n                    \"name\": \"General Knowledge Quiz\"\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"user_john\",\n                    \"email\": \"john@example.com\",\n                    \"active\": true\n                },\n                \"deleted\": false\n            },\n            \"questionAnswers\": [\n                {\n                    \"questionOption\": \"Rome\",\n                    \"correct\": true\n                },\n                {\n                    \"questionOption\": \"Milan\",\n                    \"correct\": false\n                },\n                {\n                    \"questionOption\": \"Venice\",\n                    \"correct\": false\n                }\n            ]\n        },\n        {\n            \"question\": \"What is the capital of Japan?\",\n            \"timeLimit\": 10,\n            \"points\": 5,\n            \"type\": {\n                \"id\": 1,\n                \"name\": \"multiple choice question\"\n            },\n            \"quiz\": {\n                \"id\": 3,\n                \"name\": \"Java Quiz\",\n                \"description\": \"A quiz about Java fundamentals.\",\n                \"coverImage\": \"java.png\",\n                \"language\": \"English\",\n                \"status\": \"draft\",\n                \"type\": {\n                    \"id\": 1,\n                    \"name\": \"General Knowledge Quiz\"\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"username\": \"user_john\",\n                    \"email\": \"john@example.com\",\n                    \"active\": true\n                },\n                \"deleted\": false\n            },\n            \"questionAnswers\": [\n                {\n                    \"questionOption\": \"Tokyo\",\n                    \"correct\": true\n                },\n                {\n                    \"questionOption\": \"Beijing\",\n                    \"correct\": false\n                },\n                {\n                    \"questionOption\": \"Seoul\",\n                    \"correct\": false\n                }\n            ]\n        }\n    ]\n}\n\n ```\n\n# Get Question & QuestionAnswers by Id\n\n- **Feature: Get Questions & QuestionAnswers by Id**\n    \n- **EndPoint URL : \" /api/questions/id \"**\n    \n- **HTTP Methods: GET**\n    \n\n**Response Format:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| question | string | The question. |\n| timeLimit | integer | Time limit for answering the question (in seconds). |\n| points | integer | Points awarded for answering the question correctly. |\n| type | QuestionType | The object of the question type. |\n| quiz | Quiz | The object of the quiz to which the question belongs. |\n| questionAnswers | array of objects | An array of question answers. |\n\n#### Question Answer Object:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| questionOption | string | The answer option for the question. |\n| is_correct | boolean | Indicates if the option is correct or not. |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Question and QuestionAnswers found successfully\",\n    \"data\": {\n        \"question\": \"What is the capital of India?\",\n        \"timeLimit\": 10,\n        \"points\": 5,\n        \"type\": {\n            \"id\": 1,\n            \"name\": \"multiple choice question\"\n        },\n        \"quiz\": {\n            \"id\": 3,\n            \"name\": \"Java Quiz\",\n            \"description\": \"A quiz about Java fundamentals.\",\n            \"coverImage\": \"java.png\",\n            \"language\": \"English\",\n            \"status\": \"draft\",\n            \"type\": {\n                \"id\": 1,\n                \"name\": \"General Knowledge Quiz\"\n            },\n            \"user\": {\n                \"id\": 1,\n                \"username\": \"user_john\",\n                \"email\": \"john@example.com\",\n                \"active\": true\n            },\n            \"deleted\": false\n        },\n        \"questionAnswers\": [\n            {\n                \"questionOption\": \"Delhi\",\n                \"correct\": true\n            },\n            {\n                \"questionOption\": \"Mumbai\",\n                \"correct\": false\n            },\n            {\n                \"questionOption\": \"Kolkata\",\n                \"correct\": false\n            },\n            {\n                \"questionOption\": \"Goa\",\n                \"correct\": false\n            }\n        ]\n    }\n}\n\n ```\n\n# Get Question & QuestionAnswers by QuizId\n\n- **Feature: Get Questions & QuestionAnswers by Id**\n    \n- **EndPoint URL : \" /api/questions/quiz \"**\n    \n- **HTTP Methods: post**\n    \n\n**Request Format:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| Quiz Id | Long | quiz id for question |\n\n``` json\n{\n    \"quizId\":1\n}\n\n ```\n\n**Response Format:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| question | string | The question. |\n| timeLimit | integer | Time limit for answering the question (in seconds). |\n| points | integer | Points awarded for answering the question correctly. |\n| type | QuestionType | The object of the question type. |\n| quiz | Quiz | The object of the quiz to which the question belongs. |\n| questionAnswers | array of objects | An array of question answers. |\n\n#### Question Answer Object:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| questionOption | string | The answer option for the question. |\n| is_correct | boolean | Indicates if the option is correct or not. |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Questions and QuestionAnswers found successfully\",\n    \"data\": [\n        {\n            \"question\": \"What is the capital of India?\",\n            \"timeLimit\": 10,\n            \"points\": 0,\n            \"type\": {\n                \"id\": 1\n            },\n            \"quiz\": {\n                \"id\": 1,\n                \"collection\": {\n                    \"id\": 1\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"active\": false\n                },\n                \"deleted\": false\n            },\n            \"questionAnswers\": [\n                {\n                    \"questionOption\": \"Delhi\",\n                    \"correct\": true\n                },\n                {\n                    \"questionOption\": \"Mumbai\",\n                    \"correct\": false\n                },\n                {\n                    \"questionOption\": \"Kolkata\",\n                    \"correct\": false\n                },\n                {\n                    \"questionOption\": \"Goa\",\n                    \"correct\": false\n                }\n            ]\n        },\n        {\n            \"question\": \"question 2\",\n            \"timeLimit\": 10,\n            \"points\": 0,\n            \"type\": {\n                \"id\": 1\n            },\n            \"quiz\": {\n                \"id\": 1,\n                \"collection\": {\n                    \"id\": 1\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"active\": false\n                },\n                \"deleted\": false\n            },\n            \"questionAnswers\": [\n                {\n                    \"questionOption\": \"option 1\",\n                    \"correct\": true\n                },\n                {\n                    \"questionOption\": \"option 2\",\n                    \"correct\": false\n                },\n                {\n                    \"questionOption\": \"option 3\",\n                    \"correct\": false\n                },\n                {\n                    \"questionOption\": \"option 4\",\n                    \"correct\": false\n                }\n            ]\n        },\n        {\n            \"question\": \"question 3\",\n            \"timeLimit\": 10,\n            \"points\": 0,\n            \"type\": {\n                \"id\": 1\n            },\n            \"quiz\": {\n                \"id\": 1,\n                \"collection\": {\n                    \"id\": 1\n                },\n                \"user\": {\n                    \"id\": 1,\n                    \"active\": false\n                },\n                \"deleted\": false\n            },\n            \"questionAnswers\": [\n                {\n                    \"questionOption\": \"option 1\",\n                    \"correct\": true\n                },\n                {\n                    \"questionOption\": \"option 2\",\n                    \"correct\": false\n                },\n                {\n                    \"questionOption\": \"option 3\",\n                    \"correct\": false\n                },\n                {\n                    \"questionOption\": \"option 4\",\n                    \"correct\": false\n                }\n            ]\n        }\n    ]\n}\n\n ```\n\n# Get Question & QuestionAnswers by QuizId with pagination\n\n- **Feature: Get Questions & QuestionAnswers by Id**\n    \n- **EndPoint URL : \" /api/questions/**preview**\"**\n    \n- **HTTP Methods: post**\n    \n\n**Request Format:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| Quiz Id | Long | quiz id for question |\n| page | Long | page number |\n| pageSize | Long | Number of Data to in an Page |\n\n``` json\n{\n    \"page\":1,\n    \"pageSize\":1,\n    \"quizId\":1\n}\n\n ```\n\n**Response Format:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| question | string | The question. |\n| timeLimit | integer | Time limit for answering the question (in seconds). |\n| points | integer | Points awarded for answering the question correctly. |\n| type | QuestionType | The object of the question type. |\n| quiz | Quiz | The object of the quiz to which the question belongs. |\n| questionAnswers | array of objects | An array of question answers. |\n\n#### Question Answer Object:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| questionOption | string | The answer option for the question. |\n| is_correct | boolean | Indicates if the option is correct or not. |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Questions and QuestionAnswers found successfully\",\n    \"data\": {\n        \"page\": 1,\n        \"pageSize\": 1,\n        \"totalElements\": 3,\n        \"content\": [\n            {\n                \"question\": \"question 2\",\n                \"timeLimit\": 10,\n                \"points\": 0,\n                \"type\": {\n                    \"id\": 1\n                },\n                \"quiz\": {\n                    \"id\": 1,\n                    \"collection\": {\n                        \"id\": 1\n                    },\n                    \"user\": {\n                        \"id\": 1,\n                        \"active\": false\n                    },\n                    \"deleted\": false\n                },\n                \"questionAnswers\": [\n                    {\n                        \"questionOption\": \"option 1\",\n                        \"correct\": true\n                    },\n                    {\n                        \"questionOption\": \"option 2\",\n                        \"correct\": false\n                    },\n                    {\n                        \"questionOption\": \"option 3\",\n                        \"correct\": false\n                    },\n                    {\n                        \"questionOption\": \"option 4\",\n                        \"correct\": false\n                    }\n                ]\n            }\n        ]\n    }\n}\n\n ```\n\n## Update Question & QuestionAnswer\n\n- **Feature: Update Question & QuestionAnswer**\n    \n- **EndPoint URL : \" /api/questions \"**\n    \n- **HTTP Methods: PUT**\n    \n\n#### **Request Format:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | long | Must exist (non-null and non-zero). | The ID of the question to be updated. |\n| question | string | Max length: 3000. Should accept alphabets, numerics, special characters, and blank spaces. | The updated question. |\n| timeLimit | integer | Must be in seconds. Minimum: 5, Maximum: 30. | Updated time limit for answering the question (in seconds). |\n| points | integer | Must be a whole number integer. | Updated points awarded for answering the question correctly. |\n| type_id | long | Must exist (non-null and non-zero). | The ID of the updated question type. |\n| quiz_id | long | Must exist (non-null and non-zero). | The ID of the updated quiz to which the question belongs. |\n| questionAnswers | array of objects | N/A | An array of updated question answers. |\n\n#### Question Answer Object:\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | long | Must exist (non-null and non-zero). | The ID of the question answer to be updated. |\n| questionOption | string | Max length: 3000. Should accept alphabets, numerics, special characters, and blank spaces. | The updated answer option for the question. |\n| correct | boolean | Default value is \"false\". | Indicates if the option is correct or not. Default value is \"false\"(updated). |\n\n#### Sample Request:\n\n``` json\n{\n    \"id\":7,\n  \"question\": \"What is the capital of Japan?\",\n  \"timeLimit\": 10,\n  \"points\": 5,\n    \"type\":{\n        \"id\":1\n    },\n    \"quiz\":{\n        \"id\":2\n    },\n  \"questionAnswers\": [\n    {\n        \"id\":9,\n      \"questionOption\": \"Tokyo\",\n      \"correct\": true\n    },\n    {\n        \"id\":10,\n      \"questionOption\": \"Osaka\",\n      \"correct\": false\n    },\n    {\n        \"id\":11,\n      \"questionOption\": \"Kyoto\",\n      \"correct\": false\n    },\n    {\n        \"id\":12,\n      \"questionOption\": \"Kobe\",\n      \"correct\": false\n    }\n  ]\n}\n\n ```\n\n#### **Response Format:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| question | string | Updated question. |\n| timeLimit | integer | Updated Time limit for answering the question (in seconds). |\n| points | integer | Updated Points awarded for answering the question correctly. |\n| type_id | long | Updated ID of the question type. |\n| quiz_id | long | Updated ID of the quiz to which the question belongs. |\n| questionAnswers | array of objects | Updated array of question answers. |\n\n#### Question Answer Object:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| questionOption | string | Updated answer option for the question. |\n| correct | boolean | Indicates if the option is correct or not(updated). |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Question and QuestionAnswers updated successfully\",\n    \"data\": {\n        \"question\": \"What is the capital of Japan?\",\n        \"timeLimit\": 10,\n        \"points\": 5,\n        \"type\": {\n            \"id\": 1\n        },\n        \"quiz\": {\n            \"id\": 2,\n            \"deleted\": false\n        },\n        \"questionAnswers\": [\n            {\n                \"questionOption\": \"Tokyo\",\n                \"correct\": true\n            },\n            {\n                \"questionOption\": \"Osaka\",\n                \"correct\": false\n            },\n            {\n                \"questionOption\": \"Kyoto\",\n                \"correct\": false\n            },\n            {\n                \"questionOption\": \"Kobe\",\n                \"correct\": false\n            }\n        ]\n    }\n}\n\n ```\n\n# Delete Question & QuestionAnswers By Id\n\n- **Feature: Delete Question by ID**\n    \n- **EndPoint URL : \" /api/questions/id \"**\n    \n- **HTTP Methods: DELETE**\n    \n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Question and QuestionAnswers deleted successfully\"\n}\n\n ```"
		},
		{
			"name": "Player Quiz Question & Answer",
			"item": [],
			"description": "## Player Quiz Question and Answer ADD API\n\n- **Featrue: To Display the Question with options**\n- **EndPoint URL : \" {{host}}/**Player**/quiz-question \"**\n    \n- **HTTP Methods: POST**\n    \n\n#### **Request Formate:**\n\nUser_Quiz_Question Table:\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| question | String | Not Blank | Text Question (Mandatory) |\n| type | QuestionType (Long) | Must exist in QuestionType table | Question type for question (Mandatory) |\n| PlayerQuiz | PlayerQuizDto (Long) | Must exist in PlayerQuiz table | Player quiz id for Question (Mandatory) |\n| correct | boolean | NA | Flag indicating whether the answer provided is correct  <br>(Optional) |\n| noAnswer | boolean | NA | Flag indicating if no answer was provided (Optional) |\n| timeTaken | int | NA | Time taken to answer the question  <br>(Mandatory) |\n| playerQuizAnswers | List | NotEmpty | List of user quiz answer (Mandatory) |\n\nPlayer_Quiz_Answer Table:\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| questionOption | String | Not Blank | The text of the option (Mandatory) |\n| selectedOption | Long | Not Blank | option selected by the user. get using option id (Mandatory) |\n| optionSequence | int | Not Null | Sequence of the option (Mandatory) |\n\n#### Sample Request:\n\n``` json\n{\n  \"question\": \"Which of the following is a primitive data type in Java?\",\n  \"type\": {\n    \"id\": 123\n  },\n  \"playerQuiz\": {\n    \"id\": 123\n  },\n  \"timeTaken\": 10,\n  \"playerQuizAnswers\": [\n    {\n      \"questionOption\": \"int\",\n      \"selectedOption\": 1,\n      \"optionSequence\": 1\n    },\n    {\n      \"questionOption\": \"String\",\n      \"selectedOption\": 2,\n      \"optionSequence\": 2\n    },\n    {\n      \"questionOption\": \"ArrayList\",\n      \"selectedOption\": 3,\n      \"optionSequence\": 3\n    },\n    {\n      \"questionOption\": \"boolean\",\n      \"selectedOption\": 4,\n      \"optionSequence\": 4\n    }\n  ]\n}\n\n ```\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player Quiz Question and Answer saved successfully\"\n}\n\n ```\n\n## Player Quiz Question and Answer Get API\n\n#### **Get All data**\n\n- **Featrue: To get the Question with options**\n- **EndPoint URL : \" {{host}}/p**layer**/quiz-question \"**\n    \n- **HTTP Methods: GET**\n    \n\n#### **Response Formate:**\n\nPlayer_Quiz_Question Table:\n\n| Field | **Type** | Description |\n| --- | --- | --- |\n| question | String | Text Question |\n| type | QuestionType (Long) | Question type for question |\n| playerQuiz | PlayerQuizDto (Long) | Player quiz id for question |\n| correct | boolean | Flag indicating whether the answer provided is correct |\n| noAnswer | boolean | Flag indicating if no answer was provided |\n| points | int | Points awarded for the question |\n| timeTaken | int | Time taken to answer the question |\n| playerQuizAnswers | List | List of user quiz answer |\n\nPlayer_Quiz_Answer Table:\n\n| Field | **Type** | Description |\n| --- | --- | --- |\n| questionOption | String | The text of the option |\n| selectedOption | Long | option selected by the user. get using option id |\n| optionSequence | int | Sequence of the option |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player Quiz Question and Answer found successfully\",\n    \"data\": [\n        {\n            \"question\": \"Which of the following is a primitive data type in Java?\",\n            \"type\": {\n                \"id\": 1\n            },\n            \"playerQuiz\": {\n                \"id\": 1,\n                \"players\": 10,\n                \"time\": 2023,\n                \"code\": 123456,\n                \"performancePercentage\": 50\n            },\n            \"isCorrect\": false,\n            \"noAnswer\": false,\n            \"points\": 0,\n            \"timeTaken\": 10,\n            \"playerQuizAnswers\": [\n                {\n                    \"questionOption\": \"int\",\n                    \"selectedOption\": 1,\n                    \"optionSequence\": 1\n                },\n                {\n                    \"questionOption\": \"String\",\n                    \"selectedOption\": 2,\n                    \"optionSequence\": 2\n                },\n                {\n                    \"questionOption\": \"ArrayList\",\n                    \"selectedOption\": 3,\n                    \"optionSequence\": 3\n                },\n                {\n                    \"questionOption\": \"boolean\",\n                    \"selectedOption\": 4,\n                    \"optionSequence\": 4\n                }\n            ]\n        },\n        {\n            \"question\": \"Data type in java?\",\n            \"type\": {\n                \"id\": 123\n            },\n            \"playerQuiz\": {\n                \"id\": 123,\n                \"players\": 10,\n                \"time\": 2023,\n                \"code\": 123456,\n                \"performancePercentage\": 50\n            },\n            \"isCorrect\": false,\n            \"noAnswer\": false,\n            \"points\": 0,\n            \"timeTaken\": 10,\n            \"playerQuizAnswers\": [\n                {\n                    \"questionOption\": \"int\",\n                    \"selectedOption\": 1,\n                    \"optionSequence\": 1\n                },\n                {\n                    \"questionOption\": \"String\",\n                    \"selectedOption\": 2,\n                    \"optionSequence\": 2\n                },\n                {\n                    \"questionOption\": \"ArrayList\",\n                    \"selectedOption\": 3,\n                    \"optionSequence\": 3\n                },\n                {\n                    \"questionOption\": \"boolean\",\n                    \"selectedOption\": 4,\n                    \"optionSequence\": 4\n                }\n            ]\n        }\n    ]\n}\n\n ```\n\n#### **Get by Id :**\n\n- **Featrue: To get the Question with options using Question id**\n- **EndPoint URL : \" {{host}}/player/quiz-question/7 \"**\n    \n- **HTTP Methods: GET**\n    \n\n#### **Request Formate:**\n\n| Field | **Type** | Description |\n| --- | --- | --- |\n| Id | Long | Question id (Mandatory) |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player Quiz Question and Answer found successfully\",\n    \"data\": {\n        \"question\": \"Which of the following is a primitive data type in Java?\",\n        \"type\": {\n            \"id\": 1\n        },\n        \"playerQuiz\": {\n            \"id\": 1,\n            \"players\": 10,\n            \"time\": 2023,\n            \"code\": 123456,\n            \"performancePercentage\": 50\n        },\n        \"isCorrect\": false,\n        \"noAnswer\": false,\n        \"points\": 0,\n        \"timeTaken\": 10,\n        \"playerQuizAnswers\": [\n            {\n                \"questionOption\": \"int\",\n                \"selectedOption\": 1,\n                \"optionSequence\": 1\n            },\n            {\n                \"questionOption\": \"String\",\n                \"selectedOption\": 2,\n                \"optionSequence\": 2\n            },\n            {\n                \"questionOption\": \"ArrayList\",\n                \"selectedOption\": 3,\n                \"optionSequence\": 3\n            },\n            {\n                \"questionOption\": \"boolean\",\n                \"selectedOption\": 4,\n                \"optionSequence\": 4\n            }\n        ]\n    }\n}\n\n ```\n\n## Player Quiz Question and Answer Update API\n\n- **Featrue: To update the status**\n- **EndPoint URL : \" {{host}}/player/quiz-question \"**\n    \n- **HTTP Methods: PUT**\n    \n\n#### **Request Formate:**\n\nUser_Quiz_Question Table:\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | NotEmpty and Must exist in player_quiz_question table | Player quiz question id ,Primary key (Mandatory) |\n| question | String | Not Blank | Text Question (Mandatory) |\n| type | QuestionType (Long) | Must exist in QuestionType table | Question type for question (Mandatory) |\n| playerQuiz | PlayerQuizDto (Long) | Must exist in PlayerQuiz table | Player quiz id for Question (Mandatory) |\n| correct | boolean | NA | Flag indicating whether the answer provided is correct  <br>(Optional) |\n| points | int | NA | points of question |\n| noAnswer | boolean | NA | Flag indicating if no answer was provided (Optional) |\n| timeTaken | int | NA | Time taken to answer the question  <br>(Mandatory) |\n| playerQuizAnswers | List | NotEmpty | List of player quiz answer (Mandatory) |\n\nPlayer_Quiz_Answer Table:\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | NotEmpty and Must exist in player_quiz_answer table | player quiz answer id ,Primary key (Mandatory) |\n| questionOption | String | Not Blank | The text of the option (Mandatory) |\n| selectedOption | Long | Not Blank | option selected by the player. get using option id (Mandatory) |\n| optionSequence | int | Not Null | Sequence of the option (Mandatory) |\n\nSample Request:\n\n``` json\n{\n  \"id\":4,\n  \"question\": \"primitive Data type in java?\",\n  \"points\":50,\n  \"correct\":true,\n  \"type\": {\n    \"id\": 1\n  },\n  \"playerQuiz\": {\n    \"id\": 1\n  },\n  \"timeTaken\": 10,\n  \"playerQuizAnswers\": [\n    {\n      \"id\":9,\n      \"questionOption\": \"int\",\n      \"selectedOption\": 1,\n      \"optionSequence\": 1\n    },\n    {\n      \"id\":10,\n      \"questionOption\": \"string\",\n      \"selectedOption\": 2,\n      \"optionSequence\": 2\n    },\n    {\n      \"id\":11,\n      \"questionOption\": \"boolean\",\n      \"selectedOption\": 3,\n      \"optionSequence\": 3\n    },\n    {\n      \"id\":12,\n      \"questionOption\": \"All\",\n      \"selectedOption\": 4,\n      \"optionSequence\": 4\n    }\n  ]\n}\n\n ```\n\n#### **Response Formate:**\n\nPlayer_Quiz_Question Table:\n\n| Field | **Type** | Description |\n| --- | --- | --- |\n| question | String | Text Question |\n| type | QuestionType (Long) | Question type for question |\n| playerQuiz | PlayerQuizDto (Long) | Player quiz id for question |\n| correct | boolean | Flag indicating whether the answer provided is correct |\n| noAnswer | boolean | Flag indicating if no answer was provided |\n| points | int | Points awarded for the question |\n| timeTaken | int | Time taken to answer the question |\n| playerQuizAnswers | List | List of player quiz answer |\n\nPlayer_Quiz_Answer Table:\n\n| Field | **Type** | Description |\n| --- | --- | --- |\n| questionOption | String | The text of the option |\n| selectedOption | Long | option selected by the player. get using option id |\n| optionSequence | int | Sequence of the option |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player Quiz Question and Answer updated successfully\",\n    \"data\": {\n        \"question\": \"primitive Data type in java?\",\n        \"type\": {\n            \"id\": 2\n        },\n        \"playerQuiz\": {\n            \"id\": 2,\n            \"players\": 10,\n            \"time\": 2023,\n            \"code\": 123456,\n            \"performancePercentage\": 50\n        },\n        \"correct\": true,\n        \"noAnswer\": false,\n        \"points\": 50,\n        \"timeTaken\": 10,\n        \"playerQuizAnswers\": [\n            {\n                \"questionOption\": \"int\",\n                \"selectedOption\": 1,\n                \"optionSequence\": 1\n            },\n            {\n                \"questionOption\": \"String\",\n                \"selectedOption\": 2,\n                \"optionSequence\": 2\n            },\n            {\n                \"questionOption\": \"boolean\",\n                \"selectedOption\": 3,\n                \"optionSequence\": 3\n            },\n            {\n                \"questionOption\": \"All\",\n                \"selectedOption\": 4,\n                \"optionSequence\": 4\n            }\n        ]\n    }\n}\n\n ```\n\n### **Delete API :**\n\n- DELETE By Id\n- **Featrue: To delete the Question with options using Question id**\n- **EndPoint URL : \" {{host}}/player/quiz-question/1 \"**\n    \n- **HTTP Methods: DELETE**\n    \n\n#### **Request Formate:**\n\n| Field | **Type** | Description |\n| --- | --- | --- |\n| Id | Long | Question id (Mandatory) |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Player Quiz Question and Answer delete successfully\"\n}\n\n ```"
		},
		{
			"name": "OTP  API",
			"item": [],
			"description": "## Generate OTP\n\n- **Feature** : Generate OTP\n    \n- **Endpoint URL** : \"/api/auth/otp/generate/{id}\"\n    \n- **Http Method** : Get\n    \n\n#### **Response Format:**\n\n| Field | Type | Description |\n| --- | --- | --- |\n| id | Long | Id of user |\n| otp | Integer | Generated otp |\n| expirationTime | LocalDateTime | Time of expiration of specific otp. |\n\n#### **Sample Response:**\n\nJSON\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Otp generated successfully.\",\n    \"data\": {\n        \"id\": 2,\n        \"otp\": \"133214\",\n        \"expirationTime\": \"2024-05-29T16:17:53.4937842\"\n    }\n}\n\n ```\n\n\\------------------------------------------------------------------------------------------------\n\n## Verify OTP\n\n- **Feature** : Verify OTP\n    \n- **Endpoint URL** : \"/api/auth/otp/verify\"\n    \n- **Http Method** : post\n    \n\n#### **Request Format:**\n\n| Field | Type | Description |\n| --- | --- | --- |\n| id | Long | id of user |\n| otp | Integer | Generated otp |\n\n#### **Sample Request:**\n\nJSON\n\n``` json\n{\n    \"id\":1,\n    \"otp\": 123456\n}\n\n ```\n\n#### **Sample Response:**\n\nJSON\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"OTP verified Successfully.\"\n}\n\n ```"
		},
		{
			"name": "User API",
			"item": [],
			"description": "# Register User\n\n- **Featrue: Register New User**\n    \n- **EndPoint URL : \" /api/user \"**\n    \n- **HTTP Methods: POST**\n    \n\n#### **Request Formate:**\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| username | string | Must be between 5 to 15 charater and can only contain alphabets, digits, and underscore. | Username for the new user |\n| email | string | Must be valid formate for the email | Email address for the new user |\n| password | string | Minimum length should be 8.  <br>Contain 1 digit, 1 capital ,1 special character | Password for the new user |\n| active | boolean | Must be an boolean either be true or false. Default value if \"false\" | Represent if the user is active or not. |\n| otp | Integer |  | OTP for user verification. |\n| expirationTime | LocalDateTime |  | Specefic time for expire the OTP time limit. |\n| is_verified | boolean |  | Represent user verified otp or not |\n\n#### Sample Request:\n\n``` json\n{\n    \"username\": \"john_doe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"Password@123\",\n    \"active\": true\n}\n\n ```\n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| resultCode | Long | It is the custom Result Code |\n| resultMessage | String | It is the custom message |\n| username | String | Name of the user (for confirmation). |\n| emial | String | Email of the user (for confirmation). |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"User saved successfully\",\n    \"data\": {\n        \"username\": \"john_doe\",\n        \"email\": \"john@example.com\"\n    }\n}\n\n ```\n\n<<-------------------------------------------------------------------------------------\n\n# Get User\n\n- **Featrue: Get User by ID**\n    \n- **EndPoint URL : \" /api/user/id \"**\n    \n- **HTTP Methods: GET**\n    \n\n\\-> This is the API which just Accept the \"id\" in the url and return the perticular user\n\n#### Request Formate:\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| id | Long | Auto-generated Id of a existing User |\n\n#### Response Formate:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| resultCode | Long | It is the custom Result Code |\n| resultMessage | String | It is the custom message |\n| username | String | Name of the user of pertical ID |\n| email | String | Email of the user of perticular ID |\n\n#### Sample Response:-\n\nThe \"data\" contains the username and email as json object\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"User found successfully\",\n    \"data\": {\n        \"username\": \"User_004\",\n        \"email\": \"user1@example.com\"\n    }\n}\n\n ```\n\n<<--------------------------------------------------------------------------------------\n\n# Get User\n\n- **Featrue: Get All Users**\n    \n- **EndPoint URL : \" /api/user/ \"**\n    \n- **HTTP Methods: GET**\n    \n\n#### Response Response:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| resultCode | Long | It is the custom Result Code |\n| resultMessage | String | It is the custom message |\n| username | String | Name of the user of pertical ID |\n| email | String | Email of the user of perticular ID |\n\n#### Sample Formate:-\n\nThe \"data\" contains the array of json of username and email\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"User found successfully\",\n    \"data\": [\n        {\n            \"username\": \"User_001\",\n            \"email\": \"user1@example.com\"\n        },\n        {\n            \"username\": \"User_002\",\n            \"email\": \"user1@example.com\"\n        },\n        {\n            \"username\": \"User_003\",\n            \"email\": \"user1@example.com\"\n        },\n        {\n            \"username\": \"User_004\",\n            \"email\": \"user1@example.com\"\n        },\n        {\n            \"username\": \"User_005\",\n            \"email\": \"user1@example.com\"\n        },\n        {\n            \"username\": \"User_006\",\n            \"email\": \"user1@example.com\"\n        },\n        {\n            \"username\": \"User_008\",\n            \"email\": \"user1@example.com\"\n        },\n        {\n            \"username\": \"User_009\",\n            \"email\": \"user1@example.com\"\n        },\n        {\n            \"username\": \"User_010\",\n            \"email\": \"user1@example.com\"\n        }\n    ]\n}\n\n ```\n\n\\>>--------------------------------------------------------------------------------------------\n\n# Get User by User Name\n\n- **Featrue: Get User by User Name**\n    \n- **EndPoint URL : \" /api/user/username/{username} \"**\n    \n- **HTTP Methods: GET**\n    \n\n#### Request Formate:\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| UserName | String | User name for User |\n\n#### Response Formate:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| resultCode | Long | It is the custom Result Code |\n| resultMessage | String | It is the custom message |\n| id | Long | user Id |\n\n#### Sample Response:-\n\nThe \"data\" contains the username and email as json object\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"User found successfully\",\n    \"data\": {\n        \"id\": 3\n    }\n}\n\n ```\n\n##### <<---------------------------------------------------------------------------------------\n\n# Update User\n\n- **Featrue: Get User**\n    \n- **EndPoint URL : \" /api/user \"**\n    \n- **HTTP Methods: GET**\n    \n\n#### Request Formate:\n\n| Field | **Type** | **Validation** | Description |\n| --- | --- | --- | --- |\n| id | Long | Mandatory, NotNull | Auto-generated Id of a existing User |\n| username | string | Must be between 5 to 15 charater and can only contain alphabets, digits, and underscore. | Username for the new user |\n| email | string | Must be valid formate for the email | Email address for the new user |\n| password | string | Minimum length should be 8.  <br>Contain 1 digit, 1 capital ,1 special character | Password for the new user |\n\n#### Response Formate:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| resultCode | Long | It is the custom Result Code |\n| resultMessage | String | It is the custom message |\n| username | String | Name of the user of pertical ID |\n| email | String | Email of the user of perticular ID |\n\n#### Sample Response:-\n\nThe \"data\" contains the username and email as json object\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"User updated Successfully\",\n    \"data\": {\n        \"username\": \"Jenish_001\",\n        \"email\": \"jenish_029@gmial.com\"\n    }\n}\n\n ```\n\n##### <<---------------------------------------------------------------------------------------\n\n# Delete User\n\n- **Featrue: Delete user**\n    \n- **EndPoint URL : \" /api/user/id \"**\n    \n- **HTTP Methods: DELETE**\n    \n\n#### Request Formate:\n\nThis is the API which just Accept the \"id\" in the url and delete the perticular user\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| id | Long | Auto-generated Id of a existing User |\n\n#### Response Formate:-\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| resultCode | Long | It is the custom Result Code |\n| resultMessage | String | It is the custom message |\n\n#### Sample Response:-\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"User deleted successfully\"\n}\n\n ```",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Dashboard API",
			"item": [],
			"description": "## Get List of Quiz By Filter(Global Search)\n\n- **Feature: Get the List of Quiz by applying Filter**\n    \n- **EndPoint URL : \" /api/dashboard/filter\"**\n    \n- **HTTP Methods: POST**\n    \n\n#### **Request Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| page | Long | page number |\n| pageSize | Long | Number of Data to in an Page |\n| name | String | An name for Global Search |\n| userId | Long | An primary of User |\n| filterType | String | Result based on filter type(like Quiz, Report) |\n\n#### **Sample Request:**\n\n``` json\n{\n    \"page\": 0,\n    \"pageSize\": 6,\n    \"name\": \"aws\",\n    \"userId\":1,\n    \"filterType\": \"quiz\"\n}\n\n ```\n\n#### **Response Formate:**\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| page | Long | page number |\n| pageSize | Long | Number of Data to in an Page |\n| totalElement | Long | Gives the total number of data found |\n| name | String | Name of the Quiz |\n| coverImage | String | show cover image of quiz |\n| status | String | Status of quiz |\n| id | Long | Quiz Id |\n\n#### **Sample Response:**\n\n``` json\n{\n    \"resultCode\": 1001,\n    \"resultMessage\": \"Quiz found successfully\",\n    \"data\": {\n        \"page\": 0,\n        \"pageSize\": 6,\n        \"totalElements\": 1,\n        \"content\": [\n            {\n                \"name\": \"AWS Quiz\",\n                \"coverImage\": \"https://example.com/sample_cover_image.jpg\",\n                \"status\": \"Active\",\n                \"id\": 1\n            }\n        ]\n    }\n}\n\n ```"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://farming-simulator.pstmn.io"
		}
	]
}